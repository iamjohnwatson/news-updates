import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const DispatchChooser = ({ method, token, onMethodChange, onTokenChange }) => {
    return (_jsxs("div", { children: [_jsx("h3", { children: "How should we hand this to GitHub?" }), _jsxs("div", { className: "dispatch-options", children: [_jsxs("label", { className: `dispatch-card ${method === 'workflow_dispatch' ? 'dispatch-card--selected' : ''}`, children: [_jsx("input", { type: "radio", name: "dispatch-method", value: "workflow_dispatch", checked: method === 'workflow_dispatch', onChange: () => onMethodChange('workflow_dispatch') }), _jsxs("div", { children: [_jsx("strong", { children: "Trigger workflow automatically" }), _jsxs("p", { children: ["Requires a short-lived fine-grained token with ", _jsx("code", { children: "actions:write" }), " on this repo. Token is only used client-side and never stored."] }), method === 'workflow_dispatch' ? (_jsx("input", { type: "password", placeholder: "GitHub token", value: token ?? '', onChange: (event) => onTokenChange(event.target.value), autoComplete: "off" })) : null] })] }), _jsxs("label", { className: `dispatch-card ${method === 'issues' ? 'dispatch-card--selected' : ''}`, children: [_jsx("input", { type: "radio", name: "dispatch-method", value: "issues", checked: method === 'issues', onChange: () => onMethodChange('issues') }), _jsxs("div", { children: [_jsx("strong", { children: "Open a pre-filled GitHub issue" }), _jsx("p", { children: "We will open a new browser tab with the configuration ready to file. GitHub login required." })] })] })] })] }));
};
export default DispatchChooser;
